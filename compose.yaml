services:
  frontend:
    build:
      context: ../react-frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "3000:80"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5

  restservice:
    build: .
    container_name: apiserver
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=application.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_ENV=development
      - DATABASE_URI=mysql+pymysql://user:password@db/flaskdb
    depends_on:
      - db

  ga4ghwesservice:
    build: ../GA4GH-WES-API-Service
    container_name: ga4gh_service
    ports:
      - "5001:5000"
    environment:
      - FLASK_APP=application.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_ENV=development
      - DATABASE_URI=mysql+pymysql://user:password@db/ga4gh_wes_db

  opensearch:
    image: opensearchproject/opensearch:2.10.0
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  opensearch_dashboards:
    image: opensearchproject/opensearch-dashboards:2.10.0
    container_name: opensearch_dashboards
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - OPENSEARCH_USERNAME=admin
      - OPENSEARCH_PASSWORD=admin
    ports:
      - "5601:5601"
    depends_on:
      - opensearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: flaskdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=db
      - MYSQL_ROOT_PASSWORD=rootpassword
    depends_on:
      - db

volumes:
  db_data:
    # Uncomment the following lines to use a specific location on the host for the volume
    # If not specified, Docker will manage the volume location automatically
    #driver: local
    #driver_opts:
    #  type: none
    #  device: ./mysql-data
    #  o: bind
  opensearch_data:
    # Uncomment the following lines to use a specific location on the host for the volume
    # If not specified, Docker will manage the volume location automatically
    #driver: local
    #driver_opts:
    #  type: none
    #  device: ./opensearch-data
    #  o: bind